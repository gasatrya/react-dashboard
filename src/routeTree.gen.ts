/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const DashboardLazyImport = createFileRoute('/_dashboard')()
const AuthLazyImport = createFileRoute('/_auth')()
const DashboardIndexLazyImport = createFileRoute('/_dashboard/')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()

// Create/Update Routes

const DashboardLazyRoute = DashboardLazyImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_dashboard.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/',
  getParentRoute: () => DashboardLazyRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/index.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof DashboardLazyImport
    }
  }
}

// Create and export the route tree

interface AuthLazyRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
}

const AuthLazyRouteChildren: AuthLazyRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
}

const AuthLazyRouteWithChildren = AuthLazyRoute._addFileChildren(
  AuthLazyRouteChildren,
)

interface DashboardLazyRouteChildren {
  DashboardIndexLazyRoute: typeof DashboardIndexLazyRoute
}

const DashboardLazyRouteChildren: DashboardLazyRouteChildren = {
  DashboardIndexLazyRoute: DashboardIndexLazyRoute,
}

const DashboardLazyRouteWithChildren = DashboardLazyRoute._addFileChildren(
  DashboardLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardLazyRouteWithChildren
  '/login': typeof AuthLoginLazyRoute
  '/': typeof DashboardIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLazyRouteWithChildren
  '/login': typeof AuthLoginLazyRoute
  '/': typeof DashboardIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthLazyRouteWithChildren
  '/_dashboard': typeof DashboardLazyRouteWithChildren
  '/_auth/login': typeof AuthLoginLazyRoute
  '/_dashboard/': typeof DashboardIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/'
  id: '__root__' | '/_auth' | '/_dashboard' | '/_auth/login' | '/_dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLazyRoute: typeof AuthLazyRouteWithChildren
  DashboardLazyRoute: typeof DashboardLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthLazyRoute: AuthLazyRouteWithChildren,
  DashboardLazyRoute: DashboardLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_dashboard"
      ]
    },
    "/_auth": {
      "filePath": "_auth.lazy.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.lazy.tsx",
      "children": [
        "/_dashboard/"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.lazy.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.lazy.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
